#include <iostream>
#include <vector>
#include <fstream>
#include <algorithm>

using namespace std; 

class student{
	private:
		string _name; 
		vector<int> _grades; 
	public:
		student(string name):_name(name){}

		string getName() const{ return _name;}

		void addGrade(int g){ _grades.push_back(g);}

		int CourseNum() const { return _grades.size();}

		double getAvg() const{
			int S=0; 
			for (int i=0; i<_grades.size(); i++)
				S+=_grades[i]; 
			return (double)S/_grades.size(); 
		}  

		bool operator<(const student & rhs ) const{
			return getAvg() < rhs.getAvg(); 
		}

};

void Tokenize(string line, vector<string> & tokens, string delimiters){
        string token = "";
        string OneCharString = " ";
        for (int i=0; i<line.size(); i++)
                if (find(delimiters.begin(), delimiters.end(), line[i])!=delimiters.end()) // line[i] is one of the delimiter characters
                {
                        if (token != "")
                                tokens.push_back(token);
                        token = "";
                }
                else
                {
                        OneCharString[0] = line[i];
                        token +=OneCharString;
                }

        if (token != "")
                tokens.push_back(token);
}

student readStudent(string line){
	vector<string> tokens; 
	Tokenize(line, tokens, " ,");
	student s(tokens[0]); 
	for (int i=1; i<tokens.size(); i++)
		s.addGrade(atoi(tokens[i].c_str())); 
	return s; 
}

int main(){

	vector<student> students; 

	ifstream inf; 
	inf.open("students.txt"); 
	string line; 
	while (getline(inf,line).good()){
		student s = readStudent(line); 
		if (s.CourseNum()>1)
			students.push_back(s); 
	}
	inf.close(); 	
	
	for (int i=0; i< students.size(); i++)
		 cout << students[i].getName() << ": " << students[i].getAvg() << endl;


	/*
	vector<int> V({7, 8, -2, 10, 12, 0, 20}); 
	sort(V.begin(), V.end());
	for (int i=0; i<V.size(); i++)
		cout << V[i] << " "; 
	cout << endl; 
	*/

	sort(students.begin(), students.end());
	cout << "-----------------------------------" << endl; 	

	for (int i=0; i< students.size(); i++)
                 cout << students[i].getName() << ": " << students[i].getAvg() << endl;

	/*
	student S("Golnar"); 
	S.addGrade(89);
	S.addGrade(35);
	S.addGrade(100);
	cout << "#courses: " << S.CourseNum() << endl; 
	cout << "average: " << S.getAvg() << endl;  
	*/
}
